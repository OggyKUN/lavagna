name: Pipeline-to AWS-Elastic-Beanstalk
env:
  EB_APPLICATION_NAME    : "lavagna"
  EB_ENVIRONMENT_NAME    : "Lavagna-loadbalancer-github-actions-env"
  DEPLOY_PACKAGE_NAME    : "lavagna_${{ github.sha }}.zip"
  AWS_REGION_NAME        : "us-east-1"

on:
  push:
    branches: [ "master" ]

jobs:

  build:
    name: Build image
    runs-on: ubuntu-latest

    steps:
    
     - name: Check out the code
       uses: actions/checkout@v2
       
     - name: Configure AWS credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
        aws-region: ${{ env.AWS_REGION_NAME }}
        
     - name: Login to Amazon ECR
       id: login-ecr
       uses: aws-actions/amazon-ecr-login@v1

     - name: Build, tag, and push docker image to Amazon ECR
       env:
         REGISTRY: ${{ steps.login-ecr.outputs.registry }}
         REPOSITORY: lavagna_first
         IMAGE_TAG: ${{ github.sha }}
       run: |
         docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
         docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

     - name: Create ZIP for EB
       run: zip ${{ env.DEPLOY_PACKAGE_NAME }} .env docker-compose.yml
     - name: Check archive
       run: ll -a

  deploy:
  
     name: Deploy image to Elastic Beanstalk from ECR
     runs-on: ubuntu-latest
     needs: [build]
     steps:
      - name: Deploy image to Elastic Beanstalk from ECR
        uses: einaregilsson/beanstalk-deploy@v20
        with:
           aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
           aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
           application_name: ${{ env.EB_APPLICATION_NAME }}
           environment_name: ${{ env.EB_ENVIRONMENT_NAME }}
           version_label: "Ver-${{ github.sha }}"
           region: ${{ env.AWS_REGION_NAME }}
           deployment_package: ${{ env.DEPLOY_PACKAGE_NAME }}
   
